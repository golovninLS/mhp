MODULE PurchaseOrderLocked;

REQUIRE PurchaseOrderConfirmed;

NAMESPACE Purchase;

EXTEND CLASS OrderStatus {
    locked 'Locked'
}
locked 'Locked' = DATA BOOLEAN (Order);

status(Order o) += WHEN locked(o) THEN OrderStatus.locked;
color(OrderStatus o) += WHEN o = OrderStatus.locked THEN RGB(255,255,255);

lock 'Lock' (Order o) {
    APPLY; 
    IF canceled() THEN RETURN;

    NEWSESSION {
        locked(o) <- TRUE;
        APPLY;
    }
}

EXTEND FORM order
     PROPERTIES(o) lock SHOWIF (status(o) = OrderStatus.confirmed), locked;
;

DESIGN order {
    primaryActions {
        MOVE PROPERTY(lock(o)) { valueClass = 'btn-primary'; }
    }
    statusGroup {
        MOVE PROPERTY(locked(o)) {
            valueClass = 'btn-check';
            captionClass = 'btn btn-outline-primary btn-arrow-right';
        }
    }
}

EXTEND FORM orders    
    FILTERGROUP unlocked
        FILTER 'Opened' NOT locked(o) DEFAULT    
;

DESIGN orders {
    FILTERGROUP(unlocked) { alignment = STRETCH; }
}

@defineSelectionAction(orders, Order, lock, 'Lock', statuses);