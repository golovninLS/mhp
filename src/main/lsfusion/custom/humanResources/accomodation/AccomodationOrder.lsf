MODULE AccomodationOrder;

REQUIRE HumanResourcesSettings,
        Employee, Accomodation;

PRIORITY MasterData;

NAMESPACE Accomodation;

CLASS Order 'Accomodation order';

startDate 'Start date' = DATA DATE (Order) NONULL;
endDate 'End date' = DATA DATE (Order);

employee 'Employee' = DATA Employee (Order) NONULL;
nameEmployee 'Employee' (Order o) = name(employee(o));

accomodation 'Accomodation' = DATA Accomodation (Order) NONULL;
nameAccomodation 'Accomodation' (Order o) = name(accomodation(o));
rgbColorAccomodation (Order o) = rgbColor(accomodation(o));

order (DATE d, Employee e) = GROUP MIN Order o IF startDate(o) <= d AND NOT d > endDate(o) AND employee(o) = e;

prevOrder (DATE d, Employee e) = GROUP LAST Order o ORDER startDate(o), o WHERE startDate(o) < d AND employee(o) = e;
nextOrder (DATE d, Employee e) = GROUP LAST Order o ORDER DESC startDate(o), o WHERE startDate(o) > d AND employee(o) = e;

countEmployees 'Employees' (Accomodation a, DATE d) = GROUP SUM 1 IF accomodation(order(d, Employee e)) = a;
employeePrice (Accomodation a, DATE d) = round2(price(a, d) / (IF fixedPrice(a, d) THEN countEmployees(a, d) ELSE 1));
amount 'Total amount' (Accomodation a, DATE d) = price(a, d) * (IF NOT fixedPrice(a, d) THEN countEmployees(a, d) ELSE 1);  

employeePrice 'Price' (Order o, DATE d) = employeePrice(accomodation(o), d);
countEmployees 'Employees' (Order o, DATE d) = countEmployees(accomodation(o), d);

accomodationOrder (DATE d, Employee e) = accomodation(order(d, e));
nameAccomodationOrder 'Accomodation' (DATE d, Employee e) = nameAccomodation(order(d, e));
rgbColorAccomodationOrder (DATE d, Employee e) = rgbColorAccomodation(order(d, e));

employeePriceAccomodationOrder 'Price' (DATE d, Employee e) = employeePrice(order(d, e), d);
countEmployeesAccomodationOrder 'Employees' (DATE d, Employee e) = countEmployees(order(d, e), d);

accomodation 'Accomodation order' (Employee e, Accomodation a, DATE from, DATE to) =
    GROUP SUM employeePriceAccomodationOrder(DATE d, e) IF accomodationOrder(d, e) = a AND iterate(d, from, to);
accomodation 'Accomodation order' (Employee e, Accomodation a, INTERVAL[DATE] i) = accomodation(e, a, from(i), to(i));

countAccomodation 'Accomodation order (days)' (Employee e, Accomodation a, DATE from, DATE to) =
    GROUP SUM 1 IF accomodationOrder(DATE d, e) = a AND iterate(d, from, to);
countAccomodation 'Accomodation order (days)' (Employee e, Accomodation a, INTERVAL[DATE] i) = countAccomodation(e, a, from(i), to(i));

accomodation 'Accomodation order' (Employee e, DATE from, DATE to) =
    GROUP SUM employeePriceAccomodationOrder(DATE d, e) IF iterate(d, from, to);
accomodation 'Accomodation order' (Employee e, INTERVAL[DATE] i) = accomodation(e, from(i), to(i));

countAccomodation 'Accomodation order (days)' (Employee e, DATE from, DATE to) =
    GROUP SUM 1 IF accomodationOrder(DATE d, e) AND iterate(d, from, to);
countAccomodation 'Accomodation order (days)' (Employee e, INTERVAL[DATE] i) = countAccomodation(e, from(i), to(i));

FORM order 'Accomodation order'
    OBJECTS o = Order PANEL
    PROPERTIES(o) startDate, endDate, nameEmployee, nameAccomodation
    
    EDIT Order OBJECT o
;

DESIGN order {
    OBJECTS {
        NEW dates {
            horizontal = TRUE;
            MOVE PROPERTY(startDate(o));
            MOVE PROPERTY(endDate(o));
        }
        MOVE PROPERTY(nameEmployee(o)) { alignment = STRETCH; }
        MOVE PROPERTY(nameAccomodation(o)) { alignment = STRETCH; }
    }
}

FORM orders 'Accomodation orders'
    OBJECTS o = Order
    PROPERTIES(o) READONLY startDate, endDate, nameEmployee, nameAccomodation
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE

    OBJECTS a = Accomodation PANEL, d = DATE PANEL
    PROPERTIES name(a) SELECTOR, date 'Дата' = VALUE(d)
    
    OBJECTS oo = Order
    PROPERTIES READONLY nameEmployee(oo), employeePrice(oo, d), startDate(oo), endDate(oo)
    FILTERS startDate(oo) <= d AND NOT d > endDate(oo) AND accomodation(oo) == a;
;

DESIGN orders {
    OBJECTS {
        tabbed = TRUE;
        MOVE BOX(o);
        NEW details {
            caption = 'Детализация';
            NEW header {
                MOVE PROPERTY(name(a)) { caption = 'Объект размещения'; }
                MOVE PROPERTY(date);
                horizontal = TRUE;
            }
            MOVE BOX(oo) { caption = ''; }
        }
    }
}

FORM ordersDateEmployee 'Accomodation orders'
    OBJECTS i = INTERVAL[DATE] PANEL
    OBJECTS e = Employee PANEL

    OBJECTS d = DATE
    PROPERTIES READONLY BACKGROUND rgbColorAccomodationOrder(d, e) 'Date' = VALUE(d), nameAccomodationOrder(d, e), employeePriceAccomodationOrder(d, e), countEmployeesAccomodationOrder(d, e)
    FILTERS iterate(d, from(i), to(i))
;

NAVIGATOR {
    operations {
        NEW orders;
    }
}

count (DATE d, Employee e, Order o) = GROUP SUM 1 IF startDate(Order o1) < d AND NOT d >= endDate(o1) AND employee(o1) = e AND o != o1;

maxDate(Employee e) = GROUP MAX (MAX endDate(Order o), startDate(o)) BY employee(o);

CONSTRAINT (SETCHANGED (startDate(Order o)) OR SETCHANGED(endDate(o)) OR SETCHANGED(employee(o)))
    AND (GROUP SUM 1 IF count(DATE d, employee(o), o)
        AND iterate(d, startDate(o), endDate(o))) MESSAGE 'There is already a placement for this employee in this time frame';

CONSTRAINT (SETCHANGED (startDate(Order o)) OR SETCHANGED(endDate(o)) OR SETCHANGED(employee(o)))
    AND count(DATE d, employee(o), o)
    AND iterate(d, startDate(o), maxDate(employee(o))) AND NOT endDate(o) MESSAGE 'There is already a placement for this employee in this time frame';

CONSTRAINT SETCHANGED ((startDate(Order o)) OR SETCHANGED(endDate(o)) OR SETCHANGED(employee(o))) AND startDate(o) > endDate(o) MESSAGE 'The placement start date cannot be greater than the end date';