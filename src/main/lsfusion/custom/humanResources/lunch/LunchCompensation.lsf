MODULE LunchCompensation;

REQUIRE LunchCompensationCost, LunchProjectPayslip, ProjectTimeEntry;

NAMESPACE Lunch;

lunchCompensationPayslipCategory = DATA PayslipCategory ();
isLunchCompensation 'Lunch compensation' (PayslipCategory c) = lunchCompensationPayslipCategory() = c;

EXTEND FORM payslipCategory PROPERTIES(c) isLunchCompensation;

@definePayslipDetail(lunchCompensation, 'line');

costLunchCompensation (Employee e, DATE d) = OVERRIDE
    costLunchCompensation(project(d, e), d),
    costLunchCompensation(d);

lunchCompensation (DATE d, Employee e) = hours(d, e) AND NOT order(d, e); 
countLunchCompensation (Employee e, Project p, DATE from, DATE to) = GROUP SUM 1 IF lunchCompensation(DATE d, e) AND d >= from AND d <= to AND project(d, e) = p;
countLunchCompensation (Employee e, Project p, INTERVAL[DATE] i) = countLunchCompensation(e, p, from(i), to(i));

lunchCompensation (Employee e, Project p, DATE from, DATE to) = 
    GROUP SUM costLunchCompensation(e, DATE d) IF lunchCompensation(d, e) AND d >= from AND d <= to AND project(d, e) = p;
lunchCompensation (Employee e, Project p, INTERVAL[DATE] i) = lunchCompensation(e, p, from(i), to(i));

lunchCompensation (Employee e, DATE from, DATE to) =
    GROUP SUM costLunchCompensation(e, DATE d) IF lunchCompensation(d, e) AND d >= from AND d <= to;
lunchCompensation 'Lunch compensation' (Employee e, INTERVAL[DATE] i) = lunchCompensation(e, from(i), to(i));

project = DATA Project (PayslipLunchCompensation);
project (PayslipLunchCompensation pe) += project(pe);

INDEX project(PayslipLunchCompensation p), payslip(p);

payslipLunchCompensation = GROUP AGGR PayslipLunchCompensation pt BY payslip(pt), project(pt);

generate (Payslip p) + {
    FOR countLunchCompensation(employee(p), Project pr, period(p)) AND NOT payslipLunchCompensation(p, pr) DO NEW pe = PayslipLunchCompensation {
        payslip(pe) <- p;
        category(pe) <- lunchCompensationPayslipCategory();
        project(pe) <- pr;
    }
    FOR PayslipLunchCompensation pe = payslipLunchCompensation(p, Project pr) DO {
        quantity(pe) <- countLunchCompensation(employee(p), pr, period(p));
        total(pe) <- lunchCompensation(employee(p), pr, period(p));
    }
    DELETE PayslipLunchCompensation pe WHERE payslip(pe) = p AND NOT countLunchCompensation(employee(p), project(pe), period(p));
}