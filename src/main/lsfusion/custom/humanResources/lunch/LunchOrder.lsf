MODULE LunchOrder;

REQUIRE HumanResourcesSettings,
        Employee, LunchProduct;

PRIORITY MasterData;

NAMESPACE Lunch;

CLASS Order 'Lunch order';

date 'Date' = DATA DATE (Order) NONULL;

employee 'Employee' = DATA Employee (Order);
nameEmployee 'Employee' (Order o) = name(employee(o));

product 'Product' = DATA Product (Order);
nameProduct 'Product' (Order o) = name(product(o));

vendor 'Vendor' = DATA Partner (Order);
nameVendor 'Vendor' (Order o) = name(vendor(o));

WHEN LOCAL SETCHANGED(product(Order o)) AND vendor(product(o)) DO
    vendor(o) <- vendor(product(o));

CONSTRAINT product(Order o) AND vendor(product(o)) AND NOT vendor(product(o)) = vendor(o)
    CHECKED BY product[Order] MESSAGE 'Incorrect product for lunch order';

price 'Price' (Order o) = price(product(o), date(o));

order (DATE d, Employee e) = GROUP AGGR Order o BY date(o), employee(o);

productOrder (DATE d, Employee e) = product(order(d, e));
symbolProductOrder 'Lunch order' (DATE d, Employee e) = symbol(productOrder(d, e));

lunches 'Lunches' (Employee e, DATE from, DATE to) =
    GROUP SUM price(Order o) IF employee(o) = e AND date(o) >= from AND date(o) <= to;
lunches 'Lunches' (Employee e, INTERVAL[DATE] i) = lunches(e, from(i), to(i));

lunchesDays 'Lunches (days)' (Employee e, DATE from, DATE to) =
    GROUP SUM 1 IF employee(Order o) = e AND date(o) >= from AND date(o) <= to;
lunchesDays 'Lunches (days)' (Employee e, INTERVAL[DATE] i) = lunchesDays(e, from(i), to(i));

FORM order 'Lunch order'
    OBJECTS o = Order
    PROPERTIES(o) date, nameEmployee, nameProduct, nameVendor, price
    
    EDIT Order OBJECT o
;

FORM orders 'Lunch orders'
    OBJECTS o = Order
    PROPERTIES(o) READONLY date, nameEmployee, nameProduct, nameVendor, price
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
;

NAVIGATOR {
    operations {
        NEW orders;
    }
}