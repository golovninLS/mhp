MODULE EmployeeDocs;

REQUIRE EmployeeCustom;

NAMESPACE MasterData;

CLASS DocType 'Типы документов';
name 'Наименование' = DATA STRING(DocType);
inactive 'Неактивный' = DATA BOOLEAN (DocType);
active (DocType t) = NOT inactive(t);
index (DocType t) = PARTITION SUM 1 IF t IS DocType AND active(t) ORDER t;

FORM docTypes 'Типы документов'
    OBJECTS t = DocType
    PROPERTIES (t) index, name, inactive
    PROPERTIES (t) NEW, DELETE

    LIST DocType OBJECT t
;

DESIGN docTypes {
    OBJECTS {
        NEW types {
            horizontal = FALSE;
            align = STRETCH;
            fill = 1;
            NEW docs {
                fill = 1;
                align = STRETCH;
                MOVE BOX(t);
                PROPERTY(inactive(t)) { charWidth = 10; }
            }
            NEW options {
                caption = 'Отображать на форме отображения сотрудников';
                align = STRETCH;
                horizontal = TRUE;
            }
        }
    }
}

DESIGN employee{
    details{
        NEW infoDetails FIRST {
            caption = 'Инфо';

            NEW infoFiles LAST {
                caption = '';
            }
        }
    }
}

EXTEND FORM employeesCustom
    OBJECTS t = DocType
;

background = ABSTRACT CASE COLOR (DocType, Employee);

META docType(int)
    EXTEND FORM employee
        OBJECTS t##int = DocType PANEL
        FILTERS index(t##int) = int
    ;

    DESIGN employee{
        infoDetails{
            MOVE BOX (t##int){
                caption = name(t##int);
                NEW infoFiles##int {
                    horizontal = TRUE;
                }
            }
        }
    }
    EXTEND FORM employeesCustom
        OBJECTS t##int = DocType
        FILTERS index(t##int) = int
    ;
END

META docTypePanel(caption)
    @docType(1);
    @docType(2);
    @docType(3);
    @docType(4);
    @docType(5);
    @docType(6);
    @docType(7);
    @docType(8);
    @docType(9);
    @docType(10);
    @docType(11);
    @docType(12);
    @docType(13);
    @docType(14);
    @docType(15);
    @docType(16);
END

@docTypePanel();

META docTypePropertyAddInt(prop, caption, type, int)
    EXTEND FORM employee
        PROPERTIES (t##int, e) prop SHOWIF use###prop(t##int) BACKGROUND background(t##int, e)
    ;
END

META docTypePropertyAdd(prop, caption, type)
    use###prop caption = DATA BOOLEAN (DocType) CHARWIDTH 7;
    prop caption = DATA type (DocType, Employee);

    EXTEND FORM docTypes
        PROPERTIES (t) use###prop
    ;
    @docTypePropertyAddInt(prop, caption, type, 1);
    @docTypePropertyAddInt(prop, caption, type, 2);
    @docTypePropertyAddInt(prop, caption, type, 3);
    @docTypePropertyAddInt(prop, caption, type, 4);
    @docTypePropertyAddInt(prop, caption, type, 5);
    @docTypePropertyAddInt(prop, caption, type, 6);
    @docTypePropertyAddInt(prop, caption, type, 7);
    @docTypePropertyAddInt(prop, caption, type, 8);
    @docTypePropertyAddInt(prop, caption, type, 9);
    @docTypePropertyAddInt(prop, caption, type, 10);
    @docTypePropertyAddInt(prop, caption, type, 11);
    @docTypePropertyAddInt(prop, caption, type, 12);
    @docTypePropertyAddInt(prop, caption, type, 13);
    @docTypePropertyAddInt(prop, caption, type, 14);
    @docTypePropertyAddInt(prop, caption, type, 15);
    @docTypePropertyAddInt(prop, caption, type, 16);

    prop##Docs caption = DATA BOOLEAN (DocType);

    EXTEND FORM docTypes
        PROPERTIES (t) prop##Docs PANEL
    ;

    DESIGN docTypes {
        OBJECTS {
            types {
                options {
                    MOVE PROPERTY (prop##Docs(t));
                }
            }
        }
    }

    EXTEND FORM employeesCustom
        PROPERTIES READONLY prop(t, e) COLUMNS (t) HEADER (name(t) + ' (' + caption + ')') SHOWIF (prop##Docs(t) AND use###prop(t))
    ;

    DESIGN employeesCustom {
        PROPERTY (prop(t, e)) {
            charWidth = 15;
        }
    }
END;

META docTypeSimplePropertyAddInt(prop, type, caption, int)
    EXTEND FORM employee
        PROPERTIES (t##int, e) prop SHOWIF use###prop(t##int) HEADER name(t##int) FIRST BACKGROUND background(t##int, e)
    ;
END

META docTypeSimplePropertyAdd(prop, caption, type)
    use###prop caption = DATA BOOLEAN (DocType) CHARWIDTH 7;
    prop caption = DATA type (DocType, Employee);

    EXTEND FORM docTypes
        PROPERTIES (t) use###prop
    ;
    @docTypeSimplePropertyAddInt(prop, caption, type, 1);
    @docTypeSimplePropertyAddInt(prop, caption, type, 2);
    @docTypeSimplePropertyAddInt(prop, caption, type, 3);
    @docTypeSimplePropertyAddInt(prop, caption, type, 4);
    @docTypeSimplePropertyAddInt(prop, caption, type, 5);
    @docTypeSimplePropertyAddInt(prop, caption, type, 6);
    @docTypeSimplePropertyAddInt(prop, caption, type, 7);
    @docTypeSimplePropertyAddInt(prop, caption, type, 8);
    @docTypeSimplePropertyAddInt(prop, caption, type, 9);
    @docTypeSimplePropertyAddInt(prop, caption, type, 10);
    @docTypeSimplePropertyAddInt(prop, caption, type, 11);
    @docTypeSimplePropertyAddInt(prop, caption, type, 12);
    @docTypeSimplePropertyAddInt(prop, caption, type, 13);
    @docTypeSimplePropertyAddInt(prop, caption, type, 14);
    @docTypeSimplePropertyAddInt(prop, caption, type, 15);
    @docTypeSimplePropertyAddInt(prop, caption, type, 16);
    prop##Docs caption = DATA BOOLEAN (DocType);

    EXTEND FORM docTypes
        PROPERTIES (t) prop##Docs PANEL
    ;

    DESIGN docTypes {
        OBJECTS {
            types {
                options {
                    MOVE PROPERTY (prop##Docs(t));
                }
            }
        }
    }

    EXTEND FORM employeesCustom
        PROPERTIES prop(t, e) COLUMNS (t) HEADER (name(t)) SHOWIF (prop##Docs(t) AND use###prop(t))
    ;

    DESIGN employeesCustom {
        PROPERTY (prop(t, e)) {
            charWidth = 15;
        }
    }
END;

//files
META docTypeFilePropertyAddInt(prop, caption, type, int)
    EXTEND FORM employee
        PROPERTIES (t##int, e) upload##prop SHOWIF use###prop(t##int) HEADER ('Upload ' + caption)
        PROPERTIES (t##int, e) open##prop SHOWIF use###prop(t##int) AND prop(t##int, e) HEADER ('Open ' + caption)
    ;
    DESIGN employee{
        BOX (t##int){
            infoFiles##int {
                NEW infoFile##prop##int {
                    MOVE PROPERTY (upload##prop(t##int, e));
                    MOVE PROPERTY (open##prop(t##int, e));
                }
            }
        }
    }
END

META docTypeFilePropertyAdd(prop, caption);
use###prop caption = DATA BOOLEAN (DocType) CHARWIDTH 7;
prop caption = DATA FILE (DocType, Employee);
open##prop (DocType t, Employee e){
    open(prop(t, e), CONCAT '_', name(e), name(t));
}
upload##prop (DocType t, Employee e){
    INPUT = prop(t, e) CHANGE;
}

EXTEND FORM docTypes
    PROPERTIES (t) use###prop
;
@docTypeFilePropertyAddInt(prop, caption, FILE, 1);
@docTypeFilePropertyAddInt(prop, caption, FILE, 2);
@docTypeFilePropertyAddInt(prop, caption, FILE, 3);
@docTypeFilePropertyAddInt(prop, caption, FILE, 4);
@docTypeFilePropertyAddInt(prop, caption, FILE, 5);
@docTypeFilePropertyAddInt(prop, caption, FILE, 6);
@docTypeFilePropertyAddInt(prop, caption, FILE, 7);
@docTypeFilePropertyAddInt(prop, caption, FILE, 8);
@docTypeFilePropertyAddInt(prop, caption, FILE, 9);
@docTypeFilePropertyAddInt(prop, caption, FILE, 10);
@docTypeFilePropertyAddInt(prop, caption, FILE, 11);
@docTypeFilePropertyAddInt(prop, caption, FILE, 12);
@docTypeFilePropertyAddInt(prop, caption, FILE, 13);
@docTypeFilePropertyAddInt(prop, caption, FILE, 14);
@docTypeFilePropertyAddInt(prop, caption, FILE, 15);
@docTypeFilePropertyAddInt(prop, caption, FILE, 16);

prop##Docs caption = DATA BOOLEAN (DocType);

EXTEND FORM docTypes
    PROPERTIES (t) prop##Docs PANEL
;

DESIGN docTypes {
    OBJECTS {
        types {
            options {
                MOVE PROPERTY (prop##Docs(t));
            }
        }
    }
}

EXTEND FORM employeesCustom
    PROPERTIES prop(t, e) COLUMNS (t) HEADER (name(t) + ' (' + caption + ')') SHOWIF (prop##Docs(t) AND use###prop(t))
;

DESIGN employeesCustom {
    PROPERTY (prop(t, e)) {
        charWidth = 15;
    }
}
END;

@docTypePropertyAdd(dateFrom, 'Дата от', DATE);
@docTypePropertyAdd(dateTo, 'Дата до', DATE);
@docTypePropertyAdd(number, 'Номер', STRING);
@docTypePropertyAdd(note, 'Примечание', STRING);
@docTypeFilePropertyAdd(scan, 'Скан');
@docTypeFilePropertyAdd(scan2, 'Скан2');
@docTypeFilePropertyAdd(scan3, 'Скан3');

@docTypeSimplePropertyAdd(nameProp, 'Наименование', STRING);

trackDays 'Отслеживать(дней)' = DATA INTEGER (DocType);
EXTEND FORM docTypes
    PROPERTIES (t) trackDays
;

background(DocType dt, Employee e) += WHEN dateTo(dt, e) AND trackDays(dt) AND dateTo(dt, e) < sum(currentDate(), trackDays(dt)) THEN RGB(250, 150, 157);
background(Employee e) += WHEN (GROUP MAX TRUE IF dateTo(DocType dt, e) AND trackDays(dt) AND dateTo(dt, e) < sum(currentDate(), trackDays(dt))) THEN RGB(250, 150, 157);

NAVIGATOR {
    masterData {
        NEW docTypes;
    }
}

backgroundExpired (DocType dt, Employee e) = IF dateTo(dt, e) AND trackDays(dt) AND dateTo(dt, e) < sum(currentDate(), trackDays(dt)) THEN RGB(245, 51, 64);


DESIGN employeesCustom {
    PROPERTY (dateTo(t, e)) {
        background = backgroundExpired(t, e);
    }
}

DESIGN employee {
    infoDetails { showIf = GROUP SUM 1 IF has(currentUser(), UserRole role) AND showInfo(role); }
    roles { showIf = GROUP SUM 1 IF has(currentUser(), UserRole role) AND showRoles(role); }
    companies { showIf = GROUP SUM 1 IF has(currentUser(), UserRole role) AND showCompanies(role);}
    login { fill = 8; }
}