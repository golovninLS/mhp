MODULE TelegramBillNotification;

REQUIRE TelegramCustom, Bill, EmployeeCustom;

CLASS Notifications 'Notifications';

employee = DATA Employee (Chat);
nameEmployee 'Employee' (Chat c) = name[Partner](employee(c));
chat = GROUP AGGR Chat c BY employee(c);
nameChat 'Chat' (Employee e) = name(chat(e));
EXTEND FORM employeesCustom
    PROPERTIES (e) READONLY nameChat
    FILTERGROUP telegram
        FILTER 'Telegram' chat(e)
;

EXTEND FORM messengers
    PROPERTIES nameEmployee(c)
;

CLASS NotificationTypes 'Notification type' {
    bill 'Bill change'
}

type = DATA NotificationTypes (Notifications) MATERIALIZED NONULL;
name 'Notification type' (NotificationTypes m) = staticCaption(m) IF m IS NotificationTypes;

in 'Incl.' = DATA BOOLEAN (Chat, NotificationTypes);

captionAttachment (Chat c) = IF newAttachment(c) THEN name(newAttachment(c)) ELSE 'Attach file';

attachment 'Attach' (Chat c){
    INPUT f = NAMEDFILE DO newAttachment(c) <- f;
}

EXTEND FORM employee
    OBJECTS c = Chat PANEL, nt = NotificationTypes
    PROPERTIES in(c, nt), name(nt)
    PROPERTIES(c) PANEL newMessage, sendMessage, attachment HEADER captionAttachment(c)
    FILTERS c = chat(e)
;

DESIGN employee {
    details {
        NEW notifications {
            showIf = chat(e);
            caption = 'Notifications';
            alignment = STRETCH;
            MOVE BOX (nt);
            NEW message{
                caption = 'Message';
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY (newMessage(c));
                NEW action{
                    MOVE PROPERTY (attachment(c));
                    MOVE PROPERTY (sendMessage(c));
                }
            }
        }
    }
}

notifyUser (NotificationTypes type, STRING message) {
    timeoutHttp() <- 20000;
    FOR in(Chat c, type) DO TRY sendMessage(c, message);
}

WHEN CHANGED(status(Bill b)) DO {
    TRY {
        LOCAL message = STRING ();
        message() <- 'Change of status of the bill' + '\n\n' + 'The status of the bill' + ' â„– ' + number(b) + ' ' + 'changed from' + ' "' + PREV(nameStatus(b)) + '" to "' + nameStatus(b) + '"';
        notifyUser(NotificationTypes.bill, message());
    }
}

NAVIGATOR {
    masterData{
        MOVE messengers;
    }
}