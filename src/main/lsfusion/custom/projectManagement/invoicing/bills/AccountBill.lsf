MODULE AccountBillProject;

REQUIRE Bill, BillProject;

NAMESPACE Bill;

CLASS AccountObject 'Account object';
name 'Name' = ABSTRACT STRING (AccountObject);
type 'Type' = ABSTRACT STRING (AccountObject);
accountObject = GROUP MAX AccountObject o BY name(o);

EXTEND CLASS Project : AccountObject;
name(Project p) += ProjectManagement.name(p);
type(Project p) += 'Project';

CLASS ExtraAccountObject 'Extra account object' : AccountObject;
name 'Name' = DATA STRING (ExtraAccountObject);
name(ExtraAccountObject o) += name(o);
type(ExtraAccountObject o) += 'Extra account object';

EXTEND FORM Invoicing.options
    OBJECTS ao = ExtraAccountObject
    PROPERTIES (ao) name, type
    PROPERTIES (ao) NEW, DELETE
;
DESIGN Invoicing.options{
    tabbedPane{
        NEW extraAccount{
            caption = 'Extra account objects';
            MOVE BOX (ao);
        }
    }
}

FORM accountObjects 'Account objects'
    OBJECTS o = AccountObject
    PROPERTIES(o) READONLY name ORDER, type

    LIST AccountObject OBJECT o
;

//Bill
accountObject = DATA AccountObject (BillProject);
nameAccountObject 'Account object' (BillProject p) = name(accountObject(p));
typeAccountObject 'Type' (BillProject p) = type(accountObject(p));
project(BillProject p) <- accountObject(p) WHEN SETCHANGED(accountObject(p)) AND accountObject(p) IS Project;
WHEN LOCAL FORMS bill CHANGED(accountObject(BillProject bp)) AND (NOT monthAccount(bp) OR NOT yearAccount(bp)) DO {
    monthAccount(bp) <- extractMonth(currentDate());
    yearAccount(bp) <- extractYear(currentDate());
}

EXTEND FORM bill
    PROPERTIES (bp) nameAccountObject FIRST 
;
DESIGN bill{
    PROPERTY (nameProject(bp)) {hide = TRUE; }
}


newBill 'Add' (Project p){
    NEW b = Bill{
        NEW bp = BillProject{
            accountObject(bp) <- p;
            bill(bp) <- b;
            base(bp) <- 100;
        }
        SHOW bill OBJECTS b = b DOCKED;
    }
} IMAGE 'add.png';

EXTEND FORM project
    OBJECTS bp = BillProject
    PROPERTIES (bp) READONLY number, date, nameSalesAccount, imagedNameStatus, nameType, dueDate, untaxedAmount
    PROPERTIES NEWSESSION newBill(p) TOOLBAR DRAW bp
    FILTERS accountObject(bp) = p
;

countBillProjects = GROUP SUM 1 BY accountObject(BillProject bp);

DESIGN project{
    REMOVE BOX(b);
    details {
        MOVE BOX(bp) {
            caption = badged('Bills', countBillProjects(p));
        }
    }
}

in (Bill b, BillProject bp) = GROUP SUM 1 IF bill(bp) = b AND accountObject(bp)  MATERIALIZED;

nameProjectConcat '{Projects}' (Bill b) = GROUP CONCAT nameAccountObject(BillProject bp) IF in(b, bp), ', ' ORDER bp;

EXTEND FORM bills
    PROPERTIES (b) nameProjectConcat FIRST;
;

DESIGN bills {
    PROPERTY (nameProject(b)) {hide = TRUE; };
}

deleteBill '{Delete}' (BillProject bp) {
    ASK 'Вы действительно хотите удалить фактуру?' DO {
        IF countBillProject(bill(bp)) > 1 THEN {
            DELETE BillProject b WHERE b = bp;
        } ELSE {
            DELETE Bill b WHERE b IS Bill AND bill(bp) = b;
            DELETE BillProject b WHERE b = bp;
        }
    } ELSE MESSAGE 'Удаление отменено';
}

EXTEND FORM project
    PROPERTIES (bp) deleteBill TOOLBAR DRAW bp
;