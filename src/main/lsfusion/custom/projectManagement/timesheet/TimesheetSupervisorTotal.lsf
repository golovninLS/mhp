MODULE TimesheetSupervisorTotal;

REQUIRE TimesheetSupervisor, TimesheetSalary, 
        ProjectSalary, LunchOrder, AccomodationOrder, LunchCompensation, TimesheetSupervisorCustom, ProjectAccomodation, TimesheetSupervisorAccomodation;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

timesheetHoursProject 'Hours (project)' (Employee e, Project p, INTERVAL[DATE] i) = hours(e, p, i);
timesheetSalaryProject 'Salary (project)' (Employee e, Project p, INTERVAL[DATE] i) = salary(e, p, i);

rateSalary 'Salary per hour (project)' (Employee e, Project p, INTERVAL[DATE] i) = rateSalary(p, e, from(i));

salary (Project p, Employee e, INTERVAL[DATE] dates) =
    GROUP LAST ProjectSalary s ORDER date(s), s WHERE date(s) <= from(dates) AND NOT to(dates) > dateTo(s) BY project(s), employee(s);

accomodation 'Accomodation order' (Employee e, Project p, DATE from, DATE to) =
    GROUP SUM employeePriceAccomodationOrder(DATE d, e) IF iterate(d, from, to) AND in(p, accomodationOrder(d, e));
accomodation 'Accomodation order' (Employee e, Project p, INTERVAL[DATE] i) = accomodation(e, p, from(i), to(i));

changeRateSalary (Employee e, Project pr, INTERVAL[DATE] i) {
    INPUT q = NUMERIC[10,2] DO
        IF salary(pr, e, i) AND NOT q THEN {
            delete(salary(pr, e, i));
        } ELSE IF salary(pr, e, i) THEN {
        rate(salary(pr, e, i)) <- q;
        } ELSE NEW p = ProjectSalary {
            project(p) <- pr;
            date(p) <- from(i);
            dateTo(p) <- to(i);
            employee(p) <- e;
            rate(p) <- q;
        }
}

changeRateSalary (Employee e, Project p, INTERVAL[DATE] i, BOOLEAN autoSave) {
    IF NOT autoSave THEN {
        changeRateSalary(e, p, i);
    } ELSE
        NEWSESSION APPLY {
            changeRateSalary(e, p, i);
        }
}

closeProject 'Закрыть период' (Project p, INTERVAL[DATE] dates) {
    ASK 'Are you sure you want to close the project?' DO {
        NEWSESSION {
            managerTimesheetCloseDate(p) <- to(dates);
            APPLY;
        }
    }
} CONFIRM;

EXTEND FORM timesheetSupervisor
    PROPERTIES closeProject(p, dates) SHOWIF from(dates) > managerTimesheetCloseDate(p) OR NOT managerTimesheetCloseDate(p)

    OBJECTS te = (tp = Project, et = Employee)
    PROPERTIES READONLY nameProjectTotal 'Project' = name(tp)
    
//    OBJECTS et = Employee
    PROPERTIES(et) READONLY firstName, lastName, namePosition, rolesTimesheet
    
    PROPERTIES timesheetHoursProject(et, tp, dates) SHOWIF timesheetProject(), rateSalary(et, tp, dates) SHOWIF timesheetProject() ON CHANGE {changeRateSalary(et, tp, dates, autoSaveTimesheetHours());},
    timesheetSalaryProject(et, tp, dates) SHOWIF timesheetProject() ON CHANGE {
        SHOW timesheetSupervisorDateEmployee OBJECTS i = dates, e = et FLOAT;
    }
    PROPERTIES SHOWIF NOT timesheetProject() hours(et, tp, dates), countLunches(et, tp, dates), countAccomodation(et, tp, dates) SHOWIF NOT timesheetProject()
    PROPERTIES salary(et, tp, dates) ON CHANGE {
                   SHOW timesheetSupervisorDateEmployee OBJECTS i = dates, e = et FLOAT;
               }, lunches(et, tp, dates) ON CHANGE {
                   SHOW Lunch.ordersDateEmployee OBJECTS i = dates, e = et FLOAT;
               }, accomodation(et, tp, dates) ON CHANGE {
                    SHOW Accomodation.ordersDateEmployee OBJECTS i = dates, e = et FLOAT;
               }, lunchCompensation(et, tp, dates)

    FILTERS assigned(tp, et, dates) OR (NOT countAssignments(p) AND NOT countAssignments(currentUser()))
    FILTERS tp == timesheetProject() OR NOT timesheetProject()
    FILTERGROUP onlyFilledTotal
        FILTER 'Только заполненные'
            salary(et, tp, dates) OR lunches(et, tp, dates) OR accomodation(et, tp, dates) OR lunchCompensation(et, tp, dates) OR
            NOT timesheetProject() AND (hours(et, tp, dates) OR countLunches(et, tp, dates) OR countAccomodation(et, tp, dates))
    FILTERS in(tp, currentUser()) OR (GROUP SUM 1 IF has(currentUser(), UserRole ur) AND showAllProjects(ur))
;

DESIGN timesheetSupervisor {
    edit {
        MOVE PROPERTY(closeProject(p, dates));
    }
    tabbedPane {
        NEW total {
            caption = 'Total';
            MOVE BOX(te) {
                caption = '';
            }
        }
    }
}

openTimeSheetSupervisor 'Открыть табель' (Project p) {
    NEWSESSION {
        timesheetProject() <- p;
        SHOW timesheetSupervisor DOCKED;
    }
}

EXTEND FORM project PROPERTIES openTimeSheetSupervisor(p);

DESIGN project {
    headerRight {
        MOVE PROPERTY(openTimeSheetSupervisor(p));
    }
}