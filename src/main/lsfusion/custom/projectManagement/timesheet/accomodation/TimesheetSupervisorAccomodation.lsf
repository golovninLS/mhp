MODULE TimesheetSupervisorAccomodation;

REQUIRE TimesheetSupervisor, TimesheetAccomodation, AccomodationOrder, ProjectAccomodation;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

CONSTRAINT timesheetAccomodation() AND timesheetProject() AND NOT in(timesheetProject(), timesheetAccomodation())
    CHECKED BY timesheetAccomodation[] MESSAGE '';

symbolAccomodationOrder 'Symbol' (DATE d, Employee e) = symbol(accomodation(order(d, e)));

EXTEND FORM timesheetSupervisor
    PROPERTIES nameTimesheetAccomodation()

    OBJECTS ea = Employee
    PROPERTIES(ea) READONLY firstName, lastName, namePosition, rolesTimesheet

    PROPERTIES symbolAccomodationOrder(d, ea) WAIT COLUMNS (d) HEADER extractDay(d) BACKGROUND rgbColorAccomodationOrder(d, ea)
                ON CHANGE {
                    IF timesheetAccomodation() THEN {
                        NEWSESSION {
                            IF order(d, ea) THEN
                                endDate(order(d, ea)) <- d;
                            ELSE NEW o = Order {
                                startDate(o) <- d;
                                employee(o) <- ea;
                                accomodation(o) <- timesheetAccomodation();
                            }
                            APPLY;
                        }
                    } ELSE
                        IF order(d, ea) THEN
                            SHOW order OBJECTS o = order(d, ea) FLOAT;
                        ELSE
                            SHOW timesheetSupervisorDateEmployee OBJECTS i = interval(d, d), e = ea FLOAT;
                } ON CONTEXTMENU checkIn(d, ea) ON CONTEXTMENU checkOut(d, ea) ON CONTEXTMENU delete(d, ea)
    FILTERS assigned(timesheetProject(), ea, dates) OR hours(ea, timesheetProject(), dates) OR (NOT countAssignments(timesheetProject()) AND NOT countAssignments(currentUser()))

    FILTERGROUP onlyFilledAccomodation
        FILTER 'Только заполненные' countAccomodation(ea, dates)
;

DESIGN timesheetSupervisor {
    tabbedPane {
        NEW accomodation {
            caption = 'Accomodation order';
            MOVE PROPERTY(nameTimesheetAccomodation()) { alignment = START; }
            MOVE BOX(ea) {
                caption = '';
                PROPERTY(symbolAccomodationOrder(d, ea)) {
                    charWidth = 2;
                    //                valueTooltip = timeEntries(d, e);
                }
            }
        }
    }
}
