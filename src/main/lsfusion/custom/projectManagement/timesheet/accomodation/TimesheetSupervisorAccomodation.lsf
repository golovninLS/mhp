MODULE TimesheetSupervisorAccomodation;

REQUIRE TimesheetSupervisor, TimesheetAccomodation, AccomodationOrder, ProjectAccomodation;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

CONSTRAINT timesheetAccomodation() AND timesheetProject() AND NOT in(timesheetProject(), timesheetAccomodation())
    CHECKED BY timesheetAccomodation[] MESSAGE '';

symbolAccomodation 'Symbol' (Order o) = symbol(accomodation(o));
nameAccomodation '{master.data.name}' (Order o) = name(accomodation(o));

FORM timesheetSupervisorDateEmployeeAccomodationOrders 'Accomodations'
    OBJECTS i = INTERVAL[DATE] PANEL

    OBJECTS e = Employee PANEL

    OBJECTS o = Order
    PROPERTIES(o) READONLY startDate, endDate, symbolAccomodation, nameAccomodation
    PROPERTIES(o) EDIT, DELETE
    ORDERS startDate(o)
    FILTERS ((from(i) >= startDate(o) OR NOT from(i) < startDate(o)) AND NOT endDate(o)) OR (startDate(o) <= from(i) AND endDate(o) >= from(i))
    FILTERS employee(o) = e
;

symbolAccomodationOrder 'Symbol' (DATE d, Employee e) = symbol(accomodation(order(d, e)));
accomodationOrder 'Symbol' (DATE d, Employee e, Project p) = accomodation(order(d, e)) IF in(p, accomodation(order(d, e)));
symbolAccomodationOrder 'Symbol' (DATE d, Employee e, Project p) = symbol(accomodationOrder(d, e, p));

countAccomodation 'Accomodation order (days)' (Employee e, Project p, DATE from, DATE to) =
    GROUP SUM 1 IF in(p, accomodationOrder(DATE d, e)) AND iterate(d, from, to);
countAccomodation 'Accomodation order (days)' (Employee e, Project p, INTERVAL[DATE] i) = countAccomodation(e, p, from(i), to(i));

EXTEND FORM timesheetSupervisor
    PROPERTIES nameTimesheetAccomodation()

    OBJECTS pea = (pa = Project, ea = Employee)
    PROPERTIES READONLY nameProjectAccomodation 'Project' = name(pa)
    PROPERTIES(ea) READONLY firstName, lastName, namePosition, rolesTimesheet

    PROPERTIES symbolAccomodationOrder(d, ea, pa) WAIT COLUMNS (d) HEADER extractDay(d) BACKGROUND backgroundHoursTimesheet(d, ea)
    ON CHANGE {
        IF timesheetAccomodation() THEN {
            NEWSESSION {
                IF order(d, ea) THEN
                    endDate(order(d, ea)) <- d;
                ELSE NEW o = Order {
                    startDate(o) <- d;
                    employee(o) <- ea;
                    accomodation(o) <- timesheetAccomodation();
                }
                APPLY;
            }
        } ELSE
            SHOW timesheetSupervisorDateEmployeeAccomodationOrders OBJECTS i = interval(d, d), e = ea FLOAT;
    } ON CONTEXTMENU checkIn(d, ea) ON CONTEXTMENU checkOut(d, ea) ON CONTEXTMENU delete(d, ea)
    FILTERS assigned(pa, ea, dates) OR hours(ea, pa, dates) OR (NOT countAssignments(pa) AND NOT countAssignments(currentUser()))
    FILTERS pa == timesheetProject() OR NOT timesheetProject()
    FILTERS in(pa, timesheetAccomodation()) OR NOT timesheetAccomodation()

    FILTERGROUP onlyFilledAccomodation
        FILTER 'Только заполненные' countAccomodation(ea, pa, dates)
;

DESIGN timesheetSupervisor {
    tabbedPane {
        NEW accomodation {
            caption = 'Accomodation order';
            MOVE PROPERTY(nameTimesheetAccomodation()) { alignment = START; }
            MOVE BOX(pea) {
                caption = '';
                PROPERTY(symbolAccomodationOrder(d, ea, pa)) {
                    charWidth = 2;
                    //                valueTooltip = timeEntries(d, e);
                }
            }
        }
    }
}
